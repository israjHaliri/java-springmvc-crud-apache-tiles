<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/security
             http://www.springframework.org/schema/security/spring-security.xsd">

    <!--hard import conf-->
    <!--<beans:import resource="applicationContext.xml"/>-->

    <beans:bean id="customAuthenticationSuccessHandler" class="com.nicenetwork.controller.frontend.CustomAuthenticationSuccessHandler" />

    <!--for auth url-->
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/backend/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/api/**" access="hasRole('ROLE_ADMIN')"/>
        <remember-me key="uniqueAndSecret"/>
        <access-denied-handler error-page="/login"/>

        <form-login login-page='/login'
                    login-processing-url="/j_spring_security_check"
                    default-target-url="/backend/dashboard"
                    always-use-default-target="false"
                    authentication-failure-url="/login?error=true"
                    authentication-success-handler-ref="customAuthenticationSuccessHandler"
                    username-parameter="username"
                    password-parameter="password" />

        <logout logout-url="/logout" logout-success-url="/login"
                delete-cookies="JSESSIONID" invalidate-session="true" />
        <!-- csrf protection -->
        <csrf disabled="true"/>
    </http>

    <!-- Select users and user_roles from database -->
    <authentication-manager>
        <!-- authentication from database -->
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="select username,password,active from user where username=?"
                               authorities-by-username-query="select user_name,role from profile where user_name=?"
            />
            <password-encoder hash="bcrypt" />
        </authentication-provider>
    </authentication-manager>

</beans:beans>